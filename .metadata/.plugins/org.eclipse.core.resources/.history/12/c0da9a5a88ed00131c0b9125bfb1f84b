public class StackImpl implements Stack {

    private Object[] stackArray;
    private int arraySize;
    private int topIndex;
    public static void main(String[] args) {
        StackImpl milen = new StackImpl();
        milen.push(5);
        milen.push("asd");
        milen.push(new Integer(1));
        milen.print();
    }

    public StackImpl() {
        stackArray = new Object[2];
        arraySize = 2;
        topIndex = 0;
    }

    @Override
    public void push(Object obj) {
        if(topIndex == arraySize - 1){
            arraySize *= 2;
            Object[] newStack = new Object[arraySize];
            System.arraycopy(stackArray, 0, newStack, 0, arraySize/2 - 1);
            stackArray = newStack;
        }
        stackArray[topIndex] = obj;
        topIndex++;
    }

    @Override
    public Object pop() {
        return stackArray[topIndex--];
    }

    @Override
    public Object top() {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public int lenght() {
        // TODO Auto-generated method stub
        return 0;
    }

    @Override
    public boolean isEmpty() {
        // TODO Auto-generated method stub
        return false;
    }

    @Override
    public void clear() {
        // TODO Auto-generated method stub

    }

    @Override
    public void print() {
        for (int i = 0; i < topIndex; i++){
            System.out.println(stackArray[i].toString());
        }
    }

}
